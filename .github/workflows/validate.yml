#
# Copyright (c) 2023 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Validate PR"

on: [ pull_request, push, workflow_dispatch ]

env:
  LINUX_LABEL: ubuntu-20.04
  JAVA_VERSION: 17
  JAVA_DISTRO: oracle
  GRAALVM_VERSION: 21.3.0
  MAVEN_ARGS: |
    -B --fail-at-end
    -Dmaven.test.failure.ignore=false
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=60
    -Dmaven.wagon.http.retryHandler.count=3
    -Djdk.toolchain.version=${JAVA_VERSION}
    -Pcache

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  copyright:
    timeout-minutes: 5
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/common
        with:
          run: etc/scripts/copyright.sh
  checkstyle:
    timeout-minutes: 5
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          run: etc/scripts/checkstyle.sh
  shellcheck:
    timeout-minutes: 5
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          run: etc/scripts/shellcheck.sh
  build:
    timeout-minutes: 15
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          build-cache: read-write
          maven-cache: read-write
          run: |
            mvn ${MAVEN_ARGS} -T 8 \
              -DskipTests \
              -Dnpm.skip=true \
              -Pvscode \
              install
          artifact-name: helidon-cli
          artifact-path: cli/impl/target/helidon.zip
  spotbugs:
    needs: build
    timeout-minutes: 15
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          run: |
            mvn ${MAVEN_ARGS} -T 8 \
              -DskipTests \
              -Pspotbugs \
              verify
  javadoc:
    needs: build
    timeout-minutes: 15
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          run: |
            mvn ${MAVEN_ARGS} -T 8 \
              -DskipTests \
              -Pjavadoc \
              package
  tests:
    needs: build
    timeout-minutes: 15
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          run: |
            mvn ${MAVEN_ARGS} -T 8 \
              verify
  vscode-extension:
    needs: build
    timeout-minutes: 15
    runs-on: ${{ env.LINUX_LABEL }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          run: |
            mvn ${MAVEN_ARGS} \
              -am -pl ide-support/vscode-extension \
              -DskipTests \
              -Pvscode \
              install
  cli:
    needs: build
    timeout-minutes: 15
    strategy:
      matrix:
        os: ${{ fromJSON("[ ${{ env.LINUX_LABEL }}, ${{ env.WINDOWS_LABEL }}, ${{ env.MACOS_LABEL }} ]") }}
        include:
          - os: ubuntu-20.04
            native-image-name: helidon-linux-amd64
          - os: windows-2022
            native-image-name: helidon-windows-amd64
          - os: macos-12
            native-image-name: helidon-darwin-amd64
    runs-on: ${{ matrix.os }}
    name: cli-${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/common
        with:
          native-image: true
          run: |
            # build the executable
            mvn ${MAVEN_ARGS} \
              -am -pl cli/impl \
              -DskipTests \
              -Pnative-image,!toolchain \
              -Dnative.image.name=${{ matrix.native-image-name }} \
              package

            # smoke test
            mvn ${MAVEN_ARGS} \
              -am -pl cli/tests/functional \
              -Pnative-image \
              -Dnative.image.name=${{ matrix.native-image-name }} \
              -Dtest=CliFunctionalV2Test#*Native*
              test
          artifact-name: helidon-cli
          artifact-path: cli/impl/target/${{ matrix.exe-name }}*
