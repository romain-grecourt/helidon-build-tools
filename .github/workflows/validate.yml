#
# Copyright (c) 2023 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Validate PR"

on: [ pull_request, push, workflow_dispatch ]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRO: 'temurin'
  GRAALVM_VERSION: '21.3.0'
  MAVEN_ARGS: |
    -B --fail-at-end
    -Dmaven.test.failure.ignore=false
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=60
    -Dmaven.wagon.http.retryHandler.count=3
    -Djdk.toolchain.version=${JAVA_VERSION}
    -Pcache

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRO }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository/**
            !~/.m2/repository/io/helidon/build-tools
          enableCrossOsArchive: true
          key: local-maven-${{ hashFiles('**/pom.xml') }}-${{ github.job }}
          restore-keys: |
            local-maven-${{ hashFiles('**/pom.xml') }}
            local-maven-
      - name: Build cache
        uses: actions/cache@v3
        with:
          path: ./target/build-cache.tar
          enableCrossOsArchive: true
          key: build-cache-${{ github.run_id }}-${{ github.run_number }}
          restore-keys: |
            build-cache-
      - name: Maven build
        run: |
          mvn ${MAVEN_ARGS} -T 8 install -DskipTests
        shell: bash
      - name: Archive generic cli
        uses: actions/upload-artifact@v3.1.2
        if: ${{ runner.os == 'Linux' && always() }}
        with:
          name: cli-generic
          path: |
            cli/impl/target/helidon.zip
#  copyright:
#    timeout-minutes: 10
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - uses: actions/setup-java@v3.6.0
#        with:
#          distribution: ${{ env.JAVA_DISTRO }}
#          java-version: ${{ env.JAVA_VERSION }}
#      - uses: actions/cache@v3
#        with:
#          path: |
#            ~/.m2/repository/**
#            !~/.m2/repository/io/helidon/build-tools
#          enableCrossOsArchive: true
#          key: local-maven-${{ hashFiles('**/pom.xml') }}-${{ github.job }}
#          restore-keys: |
#            local-maven-${{ hashFiles('**/pom.xml') }}
#            local-maven-
#      - name: Copyright
#        run: etc/scripts/copyright.sh
#  checkstyle:
#    timeout-minutes: 10
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3.6.0
#        with:
#          distribution: ${{ env.JAVA_DISTRO }}
#          java-version: ${{ env.JAVA_VERSION }}
#      - uses: actions/cache@v3
#        with:
#          path: |
#            ~/.m2/repository/**
#            !~/.m2/repository/io/helidon
#          enableCrossOsArchive: true
#          key: local-maven-${{ hashFiles('**/pom.xml') }}-${{ github.job }}
#          restore-keys: |
#            local-maven-${{ hashFiles('**/pom.xml') }}
#            local-maven-
#      - name: Checkstyle
#        run: etc/scripts/checkstyle.sh
#  shellcheck:
#    timeout-minutes: 10
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Run ShellCheck
#        run: etc/scripts/shellcheck.sh
  spotbugs:
    needs: build
    timeout-minutes: 30
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JAVA_DISTRO }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository/**
            !~/.m2/repository/io/helidon/build-tools
          enableCrossOsArchive: true
          key: local-maven-${{ hashFiles('**/pom.xml') }}-${{ github.job }}
          restore-keys: |
            local-maven-${{ hashFiles('**/pom.xml') }}
            local-maven-
      - name: Build cache
        uses: actions/cache@v3
        with:
          path: ./target/build-cache.tar
          enableCrossOsArchive: true
          key: build-cache-${{ github.run_id }}-${{ github.run_number }}
          restore-keys: |
            build-cache-
      - name: Spotbugs
        run: |
          mvn ${MAVEN_ARGS} -T 8 -DskipTests -Pspotbugs verify -Dspotbugs.skip=true
#  build0:
#    timeout-minutes: 30
#    strategy:
#      matrix:
#        os: [ ubuntu-20.04, windows-2022 ]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - if: ${{ runner.os == 'Windows' }}
#        name: Use GNU tar
#        shell: cmd
#        run: |
#          echo "Adding GNU tar to PATH"
#          echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
#      - uses: actions/checkout@v3
#      - name: Set up JDK
#        uses: actions/setup-java@v3.6.0
#        with:
#          distribution: ${{ env.JAVA_DISTRO }}
#          java-version: ${{ env.JAVA_VERSION }}
#      - name: Cache local Maven repository
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.m2/repository/**
#            !~/.m2/repository/io/helidon/build-tools
#          enableCrossOsArchive: true
#          key: local-maven-${{ hashFiles('**/pom.xml') }}-${{ github.job }}
#          restore-keys: |
#            local-maven-${{ hashFiles('**/pom.xml') }}
#            local-maven-
#      - name: Maven build
#        run: |
#          mvn ${MAVEN_ARGS} install
#        shell: bash
#      - name: Archive test results
#        uses: actions/upload-artifact@v3.1.2
#        # https://github.com/actions/upload-artifact/issues/240
#        if: ${{ runner.os != 'Windows' && always() }}
#        with:
#          name: test-results
#          path: |
#            **/target/surefire-reports/*.txt
#            **/target/it/**/*.log
#      - name: Archive generic cli
#        uses: actions/upload-artifact@v3.1.2
#        if: ${{ runner.os == 'Linux' && always() }}
#        with:
#          name: cli-generic
#          path: |
#            cli/impl/target/helidon.zip
#  vscode-extension:
#    timeout-minutes: 30
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK
#        uses: actions/setup-java@v3.6.0
#        with:
#          distribution: ${{ env.JAVA_DISTRO }}
#          java-version: ${{ env.JAVA_VERSION }}
#      - name: Cache local Maven repository
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.m2/repository/**
#            !~/.m2/repository/io/helidon/build-tools
#          enableCrossOsArchive: true
#          key: local-maven-${{ hashFiles('**/pom.xml') }}-${{ github.job }}
#          restore-keys: |
#            local-maven-${{ hashFiles('**/pom.xml') }}
#            local-maven-
#      - name: Cache node modules
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.npm
#            ./**/node_modules/**
#          key: node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            node-
#      - name: Maven build
#        run: |
#          mvn ${MAVEN_ARGS} \
#            -am -pl ide-support/vscode-extension \
#            -Pide-support \
#            -Dsurefire.includes="io/helidon/lsp/**" \
#            install
#        shell: bash
#      - name: Archive logs
#        uses: actions/upload-artifact@v3.1.2
#        if: ${{ always() }}
#        with:
#          name: npm-logs
#          if-no-files-found: 'ignore'
#          path: |
#            ~/.npm/_logs/*
#      - name: Archive test results
#        uses: actions/upload-artifact@v3.1.2
#        with:
#          name: test-results
#          if-no-files-found: 'ignore'
#          path: |
#            **/target/surefire-reports/*.txt
#            **/target/it/**/*.log
#      - name: Archive VSCode extension
#        uses: actions/upload-artifact@v3.1.2
#        with:
#          name: helidon-vscode
#          path: |
#            ide-support/vscode-extension/target/vscode-helidon.vsix
#  cli:
#    timeout-minutes: 30
#    strategy:
#      matrix:
#        os: [ ubuntu-20.04, windows-2022, macos-12 ]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up GraalVM
#        uses: graalvm/setup-graalvm@v1
#        with:
#          java-version: ${{ env.JAVA_VERSION }}
#          version: ${{ env.GRAALVM_VERSION }}
#          distribution: 'graalvm'
#          components: 'native-image'
#          check-for-updates: 'false'
#          set-java-home: 'false'
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Set up JDK
#        uses: actions/setup-java@v3.6.0
#        with:
#          distribution: ${{ env.JAVA_DISTRO }}
#          java-version: ${{ env.JAVA_VERSION }}
#      - name: Cache local Maven repository
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.m2/repository/**
#            !~/.m2/repository/io/helidon/build-tools
#          enableCrossOsArchive: true
#          key: local-maven-${{ hashFiles('**/pom.xml') }}-${{ github.job }}
#          restore-keys: |
#            local-maven-${{ hashFiles('**/pom.xml') }}
#            local-maven-
#      - name: Build native cli
#        run: |
#          mvn ${MAVEN_ARGS} \
#            -am -pl cli/impl \
#            -DskipTests \
#            -Pnative-image,!toolchain \
#            package
#        shell: bash
#      - name: Archive native cli
#        uses: actions/upload-artifact@v3.1.2
#        with:
#          name: cli-${{ runner.os }}
#          path: |
#            cli/impl/target/helidon
#            cli/impl/target/helidon.exe
